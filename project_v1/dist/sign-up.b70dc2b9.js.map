{"mappings":"AAAA,IAAI,eAAe;IAAC;IAAa;IAAc;CAAW;AAE1D,MAAM,aAAa,SAAS,eAAe,UAAU,qBAAqB;AAC1E,MAAM,gBAAgB,SAAS,eAAe;AAC9C,MAAM,iBAAiB,SAAS,eAAe;AAC/C,MAAM,iBAAiB,SAAS,eAAe;AAC/C,MAAM,kBAAkB,SAAS,eAAe;AAChD,MAAM,YAAY,SAAS,eAAe;AAC1C,MAAM,kBAAkB,SAAS,eAAe;AAChD,MAAM,oBAAoB,SAAS,eAAe;AAClD,MAAM,WAAW,SAAS,cAAc;AACxC,MAAM,eAAe,SAAS,cAAc;AAC5C,MAAM,kBAAkB,SAAS,cAAc;AAC/C,MAAM,YAAY,SAAS,cAAc;AACzC,MAAM,WAAW,SAAS,cAAc,eAAc,SAAS;AAC/D,MAAM,WAAW,SAAS,cAAc,eAAc,SAAS;AAE/D,IAAI,cAAc;AAClB,IAAI,OAAK;AAET,aAAa;AACb,SAAS,UAAU,IAAI;IACnB,IAAI,QAAQ,OAAO,SAAS;IAC5B,IAAI,QAAQ,MAAM,MAAM,OAAO,OAAO;IACtC,IAAI,MAAM,WAAW,GAAG,OAAO,MAAM,MAAM,MAAM,KAAK;AAEtD;AAEJ,SAAS,iBAAiB,oBAAoB;IAC1C,OAAO,aAAa,QAAQ,YAAY,MAAM,IAAI;IAClD,QAAQ,IAAI,cAAa;IACzB,IAAI,QAAM,GAAE;QACR,IAAI,kBAAkB,UAAU;QAChC,IAAI,mBAAmB,UAAU;QACjC,IAAI,iBAAiB,UAAU;QAC/B,IAAI,sBAAsB,UAAU;QACpC,IAAI,uBAAuB,UAAU;QACrC,IAAI,sBAAsB,UAAU;QACpC,IAAI,mBAAkB,UAAU;QAGhC,QAAQ,IAAI;QACZ,UAAU,QAAM;QAChB,WAAW,QAAM;QACjB,cAAc,QAAM;QACpB,eAAe,QAAM;QACrB,aAAa,cAAY;QACzB,IAAI,kBAAgB,QAEhB,SAAS,UAAU,IAAI;aAGvB,SAAS,UAAU,IAAI;QAG3B,IAAI,kBACA,UAAU,UAAU,OAAO;IAEnC;IAOA,IAAI,cAAc;IAClB,IAAI,mBAAmB;IACvB,IAAI,mBAAmB;IAEvB,QAAQ;IACR,UAAU,iBAAiB,SAAS;QAChC,MAAM,OAAO,UAAU;QAEvB,IAAI,sCAAsC,KAAK,OAC3C,gBAAgB,cAAc;aAC3B,IAAI,CAAC,WAAW,KAAK,OACxB,gBAAgB,cAAc;aAC3B,IAAI,KAAK,SAAS,KAAK,KAAK,SAAS,GACxC,gBAAgB,cAAc;aAC3B;YACH,gBAAgB,cAAc;YAC9B,cAAc;QAClB;IACJ;IAEA,OAAO;IACP,MAAM,aAAa,SAAS,eAAe;IAC3C,MAAM,eAAe,SAAS,eAAe;IAE7C,UAAU;IACV,IAAI,iBAAiB;IAErB,UAAU;IACV,WAAW,iBAAiB,SAAS;QACjC,iBAAiB;IACrB;IAEA,UAAU;IACV,aAAa,iBAAiB,SAAS;QACnC,iBAAiB;IACrB;IAEA,YAAY;IACZ,WAAW,iBAAiB,SAAS;IAErC,SAAS;QACL,MAAM,QAAQ,WAAW;QACzB,MAAM,QAAQ,MAAM,MAAM;QAC1B,MAAM,aAAa,KAAK,CAAC,EAAE;QAC3B,MAAM,eAAe,KAAK,CAAC,EAAE;QAC7B,IAAI,eAAe;QACnB,MAAM,QAAQ,gBAAiB,sBAAsB;QAErD,IAAI,CAAC,OACD,eAAe;aACZ,IAAI,CAAC,MAAM,SAAS,MACvB,eAAe;aACZ;YACH,IAAI,CAAC,MAAM,KAAK,aACZ,eAAe;iBACZ,IAAI,CAAC,aAAa,SAAS,eAC9B,eAAe;iBACZ,IAAI,CAAC,aAAa,SAAS,eAC9B,eAAe;QAEvB;QACA,IAAI,cACA,kBAAkB,cAAc;aAC7B;YACH,kBAAkB,cAAc,aAAa,MAAM;YACnD,cAAc;QAClB;IACJ;IACA,UAAU;IACV,SAAS,aAAa,KAAK;QACvB,MAAM,aAAa;QACnB,OAAO,WAAW,KAAK;IAC3B;IAGA,sBAAsB;IACtB,MAAM,aAAa,SAAS,eAAe;IAC3C,IAAI,YACA,WAAW,iBAAiB,SAAS,SAAU,CAAC;QAC5C,QAAQ,IAAI;QACZ,MAAM,kBAAkB,WAAW,MAAM;QAEzC,IAAI,CAAC,iBAAiB;YAClB,MAAM;YACN;QACJ;QAEA,IAAI,CAAC,aAAa,kBAAkB;YAChC,MAAM;YACN;QACJ,OACI;YACA,SAAS,SAAS,eAAc;YAEhC,SAAS,SAAO,cAAa,UAAU,MAAM;YAC7C,SAAS,SAAO,cAAa,mBAAmB,cAAc,MAAM;YACpE,SAAS,SAAO,eAAc,mBAAmB,eAAe,MAAM;YACtE,SAAS,SAAO,SAAQ;YACxB,SAAS,SAAO,cAAa,aAAa;YAC1C,SAAS,SAAO,WAAW,CAAA,UAAU,UAAU,SAAS,kBAAkB,SAAS,EAAC;YAGpF,QAAQ,IAAI,SAAS,SAAS;YAC9B,OAAK;YACL,aAAa,QAAQ,QAAQ;YAC7B,QAAQ,IAAI,cAAa;YAEzB,OAAO,SAAS,OAAO;QAC3B;IAGJ;IAIJ,cAAc;IACd,cAAc,iBAAiB,SAAS;IAExC,SAAS;QACL,MAAM,WAAW,cAAc;QAC/B,IAAI,eAAe;QAEnB,MAAM,cAAc;QACpB,MAAM,oBAAoB;QAE1B,IAAI,CAAC,YAAY,KAAK,WAClB,eAAe;aACZ,IAAI,CAAC,kBAAkB,KAAK,WAC/B,eAAe;QAGnB;;;;;;QAMA,GAEA,eAAe,cAAc,gBAAgB;IACjD;IAEA,gBAAgB;IAChB,eAAe,iBAAiB,SAAS;IAEzC,SAAS;QACL,MAAM,YAAY,cAAc;QAChC,MAAM,YAAY,eAAe;QAEjC,IAAI,cAAc,WAAW;YACzB,gBAAgB,cAAc;YAC9B,mBAAmB;YACnB,mBAAmB;QACvB,OACI,gBAAgB,cAAc;IAEtC;IAIA,gCAAgC;IAChC,aAAa,iBAAiB,SAAS;QACnC,SAAS,UAAU,OAAO;IAC9B;IAEA,gBAAgB,iBAAiB,SAAS,SAAU,KAAK;QACrD,IAAI,MAAM,OAAO,YAAY,KAAK;YAC9B,MAAM;YACN,aAAa,cAAc,MAAM,OAAO;YACxC,SAAS,UAAU,OAAO;QAC9B;IACJ;IAEA,OAAO,iBAAiB,SAAS,SAAU,KAAK;QAC5C,IAAI,CAAC,SAAS,SAAS,MAAM,SACzB,SAAS,UAAU,OAAO;IAElC;IAEA,YAAY;IACZ,MAAM,YAAY,SAAS,cAAc;IACzC,UAAU,iBAAiB,SAAS;QAChC,IAAI,iBAAiB;QACrB,IAAI,aACA,iBAAiB,UAAU;QAI/B,IAAI,kBAAkB;QACtB,cAAc;QACd,IAAI,aACA,kBAAkB,WAAW,OAAO,qCAAqC;QAG7E,IAAI,sBAAsB;QAC1B,IAAI,iBACA,sBAAsB,cAAc,OAAO,8CAA8C;QAG7F,IAAI,sBAAsB;QAC1B,IAAI,kBACA,sBAAsB,eAAe,OAAO,+CAA+C;QAI/F,IAAI,wBAAwB,qBAAqB;YAC7C,MAAM;YACN;QACJ;QAEA,MAAM,mBAAmB,UAAU,UAAU,SAAS;QACtD,MAAM,0BAA0B,aAAa;QAE7C,IAAI,kBAAkB;YAClB,8BAA8B;YAC9B,MAAM,WAAW,MAAM,MAAM,gBAAgB,4BAA4B;gBACrE,QAAQ;gBACR,SAAS;oBACL,gBAAgB;gBACpB;gBACA,MAAM,KAAK,UAAU;YACzB;YAEA,IAAI,CAAC,SAAS,IACV,MAAM,IAAI,MAAM;YAGpB,MAAM,eAAe,MAAM,SAAS,QAAQ,cAAc;YAC1D,MAAM,qBAAqB,aAAa;YAExC,SAAS;YACT,QAAQ,IAAI,YAAY;YACxB,QAAQ,IAAI,MAAM;YAClB,QAAQ,IAAI,aAAa;YACzB,QAAQ,IAAI,cAAc;YAC1B,QAAQ,IAAI,kBAAkB;YAC9B,QAAQ,IAAI,gBAAgB;YAE5B,gBAAgB;YAChB,MAAM,WAAW;gBACb,MAAM;gBACN,QAAQ;gBACR,OAAO;gBACP,UAAU;gBACV,iBAAiB;YACrB;YACA,IAAI;gBACA,MAAM,WAAW,MAAM,MAAM,gBAAgB,sBAAsB;oBAC/D,QAAQ;oBACR,SAAS;wBACL,gBAAgB;oBACpB;oBACA,MAAM,KAAK,UAAU;gBACzB;gBAEA,IAAI,CAAC,SAAS,IAAI;oBACd,MAAM,OAAO,MAAM,SAAS;oBAC5B,MAAM,IAAI,MAAM,QAAQ;gBAC5B;gBACA,MAAM;YACV,EAAE,OAAO,OAAO;gBACZ,MAAM,MAAM;YAChB;QACJ,OACI,MAAM;IAEd;AACJ;AAGA,SAAS,iBAAiB,SAAS;IAC/B,SAAS,UAAU,IAAI;IACvB,SAAS,UAAU,OAAO;AAC9B;AAEA,SAAS,iBAAiB,SAAS;IAC/B,SAAS,UAAU,IAAI;IACvB,SAAS,UAAU,OAAO;AAC9B;AAEA,SAAS,UAAU,OAAO;AAC1B,SAAS,UAAU,OAAO;AAI1B,UAAU,iBAAiB,SAAS;IAChC,UAAU,UAAU,OAAO;AAC/B;AAEA,SAAS,yBAAyB,cAAc;IAC5C,MAAM,gBAAgB,SAAS,eAAe;IAC9C,IAAI,cAAc,SAAS,YACvB,cAAc,OAAO;SAErB,cAAc,OAAO;AAE7B;AAEA,MAAM,aAAa,SAAS,eAAe;AAC3C,IAAI,YACA,WAAW,iBAAiB,SAAS,SAAU,CAAC;IAC5C,OAAO,SAAS,OAAO;AAC3B;AAIJ,+CAA+C;AAC/C,MAAM,gBAAgB;AAEtB,eAAe;IACX,MAAM,iCAAiC,SAAS,eAAe;IAE/D,MAAM,gBAAgB,8BACjB,KAAK,CAAA,WAAY,SAAS,QAC1B,KAAK,CAAA;QACF,MAAM,UAAU,aAAa;QAC7B,QAAQ,QAAQ,SAAU,MAAM;YAC5B,MAAM,WAAW,SAAS,cAAc;YACxC,SAAS,OAAO,KAAK,oBAAoB;YACzC,SAAS,cAAc;YACvB,+BAA+B,YAAY;QAC/C;IACJ,GACC,MAAM;QACH,MAAM,IAAI,MAAM;IACpB;AACR;AAEA","sources":["sign-up.js"],"sourcesContent":["var validDomains = ['naver.com', 'google.com', 'daum.net'];\n\nconst emailInput = document.getElementById(\"email\"); // 변경된 이메일 입력 요소 가져오기\nconst passwordInput = document.getElementById(\"password1\");\nconst passwordInput2 = document.getElementById(\"password2\");\nconst passwordResult = document.getElementById(\"password_result\");\nconst passwordResult2 = document.getElementById(\"password_result2\");\nconst nameInput = document.getElementById(\"name\");\nconst nameCheckResult = document.getElementById(\"name_check\");\nconst mergedEmailResult = document.getElementById(\"mergedEmail\");\nconst dropdown = document.querySelector(\".dropdown\");\nconst dropdownText = dropdown.querySelector(\".text704\");\nconst dropdownContent = dropdown.querySelector(\".dropdown-content\");\nconst check_box = document.querySelector(\".check-box\");\nconst ellipse6 = document.querySelector(\".frame1362\");//남자 체크표시\nconst ellipse7 = document.querySelector(\".frame1363\");//여자 체크표시\n\nlet mail_result = 0\nvar flag=0\n\n// 쿠키 가져오는 함수\nfunction getCookie(name) {\n    var value = \"; \" + document.cookie;\n    var parts = value.split(\"; \" + name + \"=\");\n    if (parts.length === 2) return parts.pop().split(\";\").shift();\n\n    }\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n    flag = localStorage.getItem(\"flag\") === \"1\" ? 1 : 0;\n    console.log(\"first flag\",flag)\n    if (flag==1){\n        var cookie_userName = getCookie(\"userName\");\n        var cookie_userEmail = getCookie(\"userEmail\");\n        var cookie_userSex = getCookie(\"sex\");\n        var cookie_userPassword = getCookie(\"passWord\");\n        var cookie_userPassword2 = getCookie(\"passWord2\");\n        var cookie_userTestTpye = getCookie(\"testType\");\n        var cookie_userAgree= getCookie(\"agree\");\n\n    \n        console.log(cookie_userName)\n        nameInput.value=cookie_userName\n        emailInput.value=cookie_userEmail\n        passwordInput.value=cookie_userPassword\n        passwordInput2.value=cookie_userPassword2\n        dropdownText.textContent=cookie_userTestTpye\n        if (cookie_userSex==\"MALE\"){\n\n            ellipse6.classList.add(\"selected\");\n        }\n        else{\n            ellipse7.classList.add(\"selected\");\n        }\n\n        if (cookie_userAgree){\n            check_box.classList.toggle(\"selected_box\");\n        }\n    }\n\n\n    \n\n\n\n    let name_result = 0\n    let password1_result = 0\n    let password2_result = 0\n\n    // 이름 처리\n    nameInput.addEventListener(\"input\", function () {\n        const name = nameInput.value;\n\n        if (/[!@#$%^&*()_+{}\\[\\]:;<>,.?~\\\\/`'\" ]/.test(name)) {\n            nameCheckResult.textContent = \"특수 문자 또는 공백은 입력할 수 없습니다.\";\n        } else if (!/^[가-힣]+$/.test(name)) {\n            nameCheckResult.textContent = \"한글만 입력 가능합니다.\";\n        } else if (name.length < 2 || name.length > 4) {\n            nameCheckResult.textContent = \"이름은 2글자 이상, 4글자 이하로 입력해주세요.\";\n        } else {\n            nameCheckResult.textContent = \"올바른 이름입니다.\";\n            name_result = 1\n        }\n    });\n\n    //성별 처리\n    const maleOption = document.getElementById(\"maleOption\");\n    const femaleOption = document.getElementById(\"femaleOption\");\n\n    // 초기 선택 값\n    let selectedGender = null;\n\n    // 남성 선택 시\n    maleOption.addEventListener(\"click\", function () {\n        selectedGender = 'MALE';\n    });\n\n    // 여성 선택 시\n    femaleOption.addEventListener(\"click\", function () {\n        selectedGender = \"FEMALE\";\n    });\n\n    // 이메일 입력 처리\n    emailInput.addEventListener(\"input\", updateMergedEmail);\n\n    function updateMergedEmail() {\n        const email = emailInput.value;\n        const parts = email.split(\"@\");\n        const emailFront = parts[0];\n        const emailAfterAt = parts[1];\n        let errorMessage = '';\n        const regex = /^[a-z0-9]+$/i;  // 대소문자 구분 없이 검사하는 정규식\n\n        if (!email) {\n            errorMessage = \"이메일을 입력하세요.\";\n        } else if (!email.includes(\"@\")) {\n            errorMessage = \"올바른 이메일 주소를 입력하세요.\";\n        } else {\n            if (!regex.test(emailFront)) {\n                errorMessage = \"올바른 이메일 앞 부분을 입력하세요.\";\n            } else if (!validDomains.includes(emailAfterAt)) {\n                errorMessage = \"올바른 도메인 주소를 입력하세요.\";\n            } else if (!validDomains.includes(emailAfterAt)) {\n                errorMessage = \"지원하지 않는 도메인 주소입니다.\";\n            }\n        }\n        if (errorMessage) {\n            mergedEmailResult.textContent = errorMessage;\n        } else {\n            mergedEmailResult.textContent = emailFront + \"@\" + emailAfterAt;\n            mail_result = 1\n        }\n    }\n    //이메일 인증하기\n    function isValidEmail(email) {\n        const emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n        return emailRegex.test(email);\n    }\n    \n    \n    // 이메일 인증하기 버튼 이벤트 리스너\n    const email_Auth = document.getElementById(\"email_auth\");\n    if (email_Auth) {\n        email_Auth.addEventListener(\"click\", function (e) {\n            console.log(emailInput)\n            const emailInputValue = emailInput.value.trim();\n\n            if (!emailInputValue) {\n                alert(\"이메일을 입력하세요.\");\n                return;\n            }\n\n            if (!isValidEmail(emailInputValue)) {\n                alert(\"올바른 이메일 주소 형식이 아닙니다.\");\n                return;\n            }\n            else{\n                document.cookie = \"userEmail=\" +emailInputValue;\n\n                document.cookie=\"userName=\"+ nameInput.value.trim()\n                document.cookie=\"passWord=\"+ encodeURIComponent(passwordInput.value.trim())\n                document.cookie=\"passWord2=\"+ encodeURIComponent(passwordInput2.value.trim())\n                document.cookie=\"sex=\"+ selectedGender\n                document.cookie=\"testType=\"+ dropdownText.textContent\n                document.cookie=\"agree=\"+ (check_box.classList.contains(\"selected_box\") ? \"true\" : \"\")\n                \n\n                console.log(\"!!!쿠키\", document.cookie);\n                flag=1\n                localStorage.setItem(\"flag\", \"1\");\n                console.log(\"!!!!!!flag\",flag)\n\n                window.location.href = \"./sign-up-email-auth.html\";\n            }\n\n            \n        });\n    }\n\n\n    // password 처리\n    passwordInput.addEventListener(\"input\", checkPasswordValidity);\n\n    function checkPasswordValidity() {\n        const password = passwordInput.value;\n        var errorMessage = '';\n\n        const lengthRegex = /^.{9,16}$/;\n        const alphanumericRegex = /^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]+$/;\n\n        if (!lengthRegex.test(password)) {\n            errorMessage = \"비밀번호는 9자 이상 16자 이하로 입력하세요.\";\n        } else if (!alphanumericRegex.test(password)) {\n            errorMessage = \"비밀번호는 영어, 숫자, 특수문자를 모두 포함해야 합니다.\";\n        }\n\n        /*\n        else if (!nameCheck) {\n            errorMessage = \"비밀번호에 사용자 이름이 포함되어 있습니다.\";\n        } else if (!pastPasswordsCheck) {\n            errorMessage = \"비밀번호가 과거에 사용된 적이 있습니다.\";\n        }\n        */\n\n        passwordResult.textContent = errorMessage || \"비밀번호가 유효합니다.\";\n    }\n\n    // repassword 처리\n    passwordInput2.addEventListener(\"input\", checkPasswordMatch);\n\n    function checkPasswordMatch() {\n        const password1 = passwordInput.value;\n        const password2 = passwordInput2.value;\n\n        if (password1 === password2) {\n            passwordResult2.textContent = \"비밀번호가 일치합니다.\";\n            password1_result = 1\n            password2_result = 1\n        } else {\n            passwordResult2.textContent = \"비밀번호가 일치하지 않습니다.\";\n        }\n    }\n\n\n\n    // application type 드롭 다운 데이터 처리\n    dropdownText.addEventListener(\"click\", function () {\n        dropdown.classList.toggle(\"active\");\n    });\n\n    dropdownContent.addEventListener(\"click\", function (event) {\n        if (event.target.tagName === \"A\") {\n            event.preventDefault();\n            dropdownText.textContent = event.target.textContent;\n            dropdown.classList.remove(\"active\");\n        }\n    });\n\n    window.addEventListener(\"click\", function (event) {\n        if (!dropdown.contains(event.target)) {\n            dropdown.classList.remove(\"active\");\n        }\n    });\n\n    //회원가입 버튼 클릭\n    const signUpBtn = document.querySelector(\".sign-up-btn\");\n    signUpBtn.addEventListener(\"click\", async function () {\n        var nameInputValue = \"\"\n        if (name_result) {\n            nameInputValue = nameInput.value;\n\n        }\n\n        var emailInputValue = \"\";\n        mail_result = 1\n        if (mail_result) {\n            emailInputValue = emailInput.value; // Get the value from the email input\n        }\n\n        var password1InputValue = \"\"\n        if (password_result) {\n            password1InputValue = passwordInput.value; // Get the value from the first password input\n        }\n\n        var password2InputValue = \"\"\n        if (password2_result) {\n            password2InputValue = passwordInput2.value; // Get the value from the second password input\n\n        }\n\n        if (password1InputValue !== password2InputValue) {\n            alert(\"비밀번호와 재비밀번호의 값은 같아야합니다.\");\n            return;\n        }\n\n        const checkBoxSelected = check_box.classList.contains(\"selected_box\");\n        const selectedApplicationType = dropdownText.textContent;\n\n        if (checkBoxSelected) {\n            // applicationType name -> key\n            const response = await fetch(currentDomain + \"/api/applicationType/key\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(selectedApplicationType)\n            });\n\n            if (!response.ok) {\n                throw new Error('Failed to fetch data');\n            }\n\n            const responseBody = await response.json(); // JSON 데이터 파싱\n            const applicationTypeKey = responseBody.applicationTypeKey;\n\n            // 프론트 로그\n            console.log(\"이름 입력 값:\", nameInputValue);\n            console.log(\"성별\", selectedGender)\n            console.log(\"이메일 입력 값:\", emailInputValue);\n            console.log(\"비밀번호 입력 값:\", password1InputValue);\n            console.log(\"개인정보 이용 동의 여부:\", checkBoxSelected);\n            console.log(\"희망 지망 직렬 선택:\", applicationTypeKey);\n\n            // 회원가입 - 서버에 요청\n            const userData = {\n                name: nameInputValue,\n                gender: selectedGender,\n                email: emailInputValue,\n                password: password1InputValue,\n                applicationType: applicationTypeKey\n            };\n            try {\n                const response = await fetch(currentDomain + \"/api/member/signUp\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify(userData),\n                });\n\n                if (!response.ok) {\n                    const data = await response.text();\n                    throw new Error(data || \"회원가입 실패\");\n                }\n                alert(\"회원가입을 성공했습니다.\");\n            } catch (error) {\n                alert(error.message);\n            }\n        } else {\n            alert(\"개인정보 이용 동의 여부를 체크해주세요\");\n        }\n    });\n});\n\n\nellipse6.addEventListener(\"click\", function () {\n    ellipse6.classList.add(\"selected\");\n    ellipse7.classList.remove(\"selected\");\n});\n\nellipse7.addEventListener(\"click\", function () {\n    ellipse7.classList.add(\"selected\");\n    ellipse6.classList.remove(\"selected\");\n});\n\nellipse6.classList.remove(\"selected\");\nellipse7.classList.remove(\"selected\");\n\n\n\ncheck_box.addEventListener(\"click\", function () {\n    check_box.classList.toggle(\"selected_box\");\n});\n\nfunction togglePasswordVisibility(inputElementId) {\n    const passwordInput = document.getElementById(inputElementId);\n    if (passwordInput.type === \"password\") {\n        passwordInput.type = \"text\";\n    } else {\n        passwordInput.type = \"password\";\n    }\n}\n\nconst signInText = document.getElementById(\"signInText\");\nif (signInText) {\n    signInText.addEventListener(\"click\", function (e) {\n        window.location.href = \"./sign-in.html\";\n    });\n}\n\n\n// const currentDomain = window.location.origin\nconst currentDomain = \"http://localhost:8080\"\n\nasync function fetchApplicationTypeName() {\n    const applicationTypeDropDownContent = document.getElementById(\"applicationTypeDropDownContent\");\n\n    fetch(currentDomain + \"/api/applicationType/names\")\n        .then(response => response.json())\n        .then(responseJson => {\n            const options = responseJson.applicationTypeNames;\n            options.forEach(function (option) {\n                const aElement = document.createElement(\"a\");\n                aElement.href = \"#\"; // 링크를 원하는 주소로 수정 가능\n                aElement.textContent = option;\n                applicationTypeDropDownContent.appendChild(aElement);\n            });\n        })\n        .catch(() => {\n            throw new Error('Failed to fetch data');\n        });\n}\n\nfetchApplicationTypeName()"],"names":[],"version":3,"file":"sign-up.b70dc2b9.js.map","sourceRoot":"/__parcel_source_root/"}